
# parser_RegMap_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'x\x176\x8ff\xba}>\xe1k\xeb\x9cUu\x82U'
    
_lr_action_items = {'NAME':([1,2,],[4,5,]),'REGISTER':([0,],[1,]),'HEX':([4,],[6,]),'NUMBER':([4,5,],[7,8,]),'FIELD':([0,],[2,]),'$end':([0,3,6,7,8,],[-4,0,-2,-1,-3,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> REGISTER NAME NUMBER','statement',3,'p_statement_register','source/regmaps/RegMapParse.py',128),
  ('statement -> REGISTER NAME HEX','statement',3,'p_statement_registerhex','source/regmaps/RegMapParse.py',137),
  ('statement -> FIELD NAME NUMBER','statement',3,'p_statement_field','source/regmaps/RegMapParse.py',146),
  ('statement -> <empty>','statement',0,'p_statement_emptyline','source/regmaps/RegMapParse.py',153),
  ('value -> NUMBER','value',1,'p_value_number','source/regmaps/RegMapParse.py',157),
  ('value -> HEX','value',1,'p_value_hex','source/regmaps/RegMapParse.py',161),
]
